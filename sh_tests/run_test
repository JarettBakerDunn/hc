#!/bin/bash

create_original=0


if [ $create_original -eq 1 ];then
    # scalar expansion
    cat input.lonlatz | sh_ana 31 0 1 > shana.orig.out
    # vector expansion
    cat input.lonlatvpvt | sh_ana 31 1 1 > shana.vec.orig.out
    
    #
    # synthesis
    #
    cat shana.orig.out | sh_syn 0 > shsyn.orig.out
    cat shana.vec.orig.out | sh_syn 0 1 > shsyn.vec.orig.out
    #
    echo $0: scalar mean expansion error: `paste input.lonlatz shsyn.orig.out | gawk '{x=$3-$6;if(x<0)x=-x;print(x);}'  | gawk -f mean.awk `
    echo $0: vector mean expansion error: `paste input.lonlatvpvt shsyn.vec.orig.out | gawk '{x=$3-$7;if(x<0)x=-x;y=$4-$8;if(y<0)y=-y;print(x);print(y)}'  | gawk -f mean.awk `
fi


# scalar expansion
cat input.lonlatz | sh_ana 31 0 1 > shana.test.out
echo $0: tail scalar output comparison
paste shana.test.out  shana.orig.out | tail

echo $0: mean scalar expansion error: `paste shana.test.out  shana.orig.out | gawk '{if(NR>1){print($1-$3);print($2-$4);}}' | gawk -f mean.awk`

# vector expansion
cat input.lonlatvpvt | sh_ana 31 1 1 > shana.vec.test.out
echo $0: tail vector comparions
paste  shana.vec.test.out  shana.vec.orig.out  | tail
echo $0: mean vector expansion error: `paste shana.vec.test.out  shana.vec.orig.out | gawk '{if(NR>1){print($1-$5);print($2-$6);print($3-$7);print($4-$8)}}' | gawk -f mean.awk` 

#
cat shana.orig.out | sh_syn 0 > shsyn.test.out
echo $0: tail scalar synthesis comparison
paste shsyn.test.out shsyn.orig.out | tail
echo $0: mean scalar synthesis error: `paste shsyn.test.out  shsyn.orig.out | gawk '{print($3-$6)}' | gawk -f mean.awk`


cat shana.vec.orig.out | sh_syn 0 1 > shsyn.vec.test.out
echo $0: tail vector syntheisis comparison
paste shsyn.vec.test.out shsyn.vec.orig.out | tail
echo $0: mean vector synthesis error: `paste shsyn.vec.test.out  shsyn.vec.orig.out | gawk '{print($3-$7);print($4-$8)}' | gawk -f mean.awk` 

