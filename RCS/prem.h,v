head	1.4;
access;
symbols;
locks
	twb:1.4; strict;
comment	@ * @;


1.4
date	2006.04.18.01.08.39;	author twb;	state Exp;
branches;
next	1.3;

1.3
date	2004.12.20.05.18.20;	author becker;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.20.05.09.57;	author becker;	state Exp;
branches;
next	1.1;

1.1
date	2004.07.30.23.52.04;	author becker;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@/* 

header file for PREM utilities

$Id: prem.h,v 1.3 2004/12/20 05:18:20 becker Exp becker $


*/
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <limits.h>
#include <string.h>

#define PREM_F_STRING "%lf"

/* default number of layers */
#define PREM_N 13
/* number of coefficients  */
#define PREM_NP 4		


#ifndef hc_boolean
#define hc_boolean unsigned short
#endif
#ifndef TRUE 
#define TRUE 1
#endif
#ifndef FALSE
#define FALSE 0
#endif

/* 
   PREM model structure 
*/
struct prem_model{
  double crho[PREM_N*PREM_NP];	/* density parameters */
  double cvp[PREM_N*PREM_NP];		/* v_p  */
  double cvs[PREM_N*PREM_NP]; 	/* v_s */
  double cvpv[PREM_N*PREM_NP];	/* anisotropic velocities */
  double cvph[PREM_N*PREM_NP];
  double cvsv[PREM_N*PREM_NP];
  double cvsh[PREM_N*PREM_NP];
  double ceta[PREM_N*PREM_NP];	/* anisotropy parameter */
  double cqmu[PREM_N];		/* q factors */
  double cqkappa[PREM_N];
  
  int n;			/* number of layers */
  int np;			/* number of polynomial coefficients
				   in general (except qmu and qkappa) 
				*/
  double rb[PREM_N];		/* top boundary of layers, in meters */
  double r[PREM_N];		/* non-dimensionalized version  */
  double r0;			/* surface r in meters */

  hc_boolean init;
};
/* 
   constants:
   
   radius of earth in km 

*/
#define PREM_RE_KM 6371.0

/* 

functions

*/
int prem_find_layer_x(double , double, double *,int ,int, double *);
double prem_compute_pval(double  *, double *, int , double );
double prem_compute_dpval(double *, double *, int , double );
double prem_vs_voigt(double , double , double , double , 
		    double);
void prem_get_rhodrho(double *, double *,  double , struct prem_model *);
void prem_get_rho(double *,double , struct prem_model *);

void prem_get_values(double *, double *, double *, double *, 
		     double *, double *, double *, double *, 
		     double *, double *, double , 
		     struct prem_model *);



int prem_read_model(char *,struct prem_model *, 
		     hc_boolean );

int prem_read_para_set(double *, int , int ,FILE *);
@


1.3
log
@*** empty log message ***
@
text
@d5 1
a5 1
$Id: prem.h,v 1.2 2004/12/20 05:09:57 becker Exp becker $
a14 7
#ifndef CPREC
#ifdef HC_PREC
#define CPREC HC_PREC
#else
#define CPREC double
#endif
#endif
d37 10
a46 10
  CPREC crho[PREM_N*PREM_NP];	/* density parameters */
  CPREC cvp[PREM_N*PREM_NP];		/* v_p  */
  CPREC cvs[PREM_N*PREM_NP]; 	/* v_s */
  CPREC cvpv[PREM_N*PREM_NP];	/* anisotropic velocities */
  CPREC cvph[PREM_N*PREM_NP];
  CPREC cvsv[PREM_N*PREM_NP];
  CPREC cvsh[PREM_N*PREM_NP];
  CPREC ceta[PREM_N*PREM_NP];	/* anisotropy parameter */
  CPREC cqmu[PREM_N];		/* q factors */
  CPREC cqkappa[PREM_N];
d52 3
a54 3
  CPREC rb[PREM_N];		/* top boundary of layers, in meters */
  CPREC r[PREM_N];		/* non-dimensionalized version  */
  CPREC r0;			/* surface r in meters */
d71 11
a81 11
int prem_find_layer_x(CPREC , CPREC, CPREC *,int ,int, CPREC *);
CPREC prem_compute_pval(CPREC  *, CPREC *, int , CPREC );
CPREC prem_compute_dpval(CPREC *, CPREC *, int , CPREC );
CPREC prem_vs_voigt(CPREC , CPREC , CPREC , CPREC , 
		    CPREC);
void prem_get_rhodrho(CPREC *, CPREC *,  CPREC , struct prem_model *);
void prem_get_rho(CPREC *,CPREC , struct prem_model *);

void prem_get_values(CPREC *, CPREC *, CPREC *, CPREC *, 
		     CPREC *, CPREC *, CPREC *, CPREC *, 
		     CPREC *, CPREC *, CPREC , 
d86 1
a86 1
void prem_read_model(char *,struct prem_model *, 
d89 1
a89 1
int prem_read_para_set(CPREC *, int , int ,FILE *);
@


1.2
log
@*** empty log message ***
@
text
@d5 1
a5 1
$Id: prem.h,v 1.1 2004/07/30 23:52:04 becker Exp becker $
d16 2
a17 2
#ifdef HC_CPREC
#define CPREC HC_CPREC
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
$Id: prem.h,v 1.1 2004/06/20 03:55:05 becker Exp becker $
d16 3
d21 1
d63 1
@
